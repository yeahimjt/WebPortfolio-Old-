/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, OrthographicCamera } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/untitled.gltf')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cylinder001.geometry} material={nodes.Cylinder001.material} position={[0, 0, 2.99]} rotation={[Math.PI / 2, 0, 0]} scale={[1.34, 0.19, 1.34]} />
      <mesh geometry={nodes.Text005.geometry} material={nodes.Text005.material} position={[5.04, -30.91, 2.73]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Text004.geometry} material={nodes.Text004.material} position={[-38.04, -8.49, 3.15]} rotation={[Math.PI / 2, 0, 0]} scale={0.72} />
      <mesh geometry={nodes.Text003.geometry} material={nodes.Text003.material} position={[-31.16, -5.32, 3.15]} rotation={[Math.PI / 2, 0, 0]} scale={0.72} />
      <mesh geometry={nodes.Text002.geometry} material={nodes.Text002.material} position={[-37.28, -1.19, 3.15]} rotation={[Math.PI / 2, 0, 0]} scale={0.72} />
      <mesh geometry={nodes.Text001.geometry} material={nodes.Text001.material} position={[-3.29, -10.94, 2.84]} rotation={[Math.PI / 2, 0, 0]} scale={0.81} />
      <mesh geometry={nodes.Text.geometry} material={nodes.Text.material} position={[-11.81, 4.88, 3.11]} rotation={[Math.PI / 2, 0, 0]} scale={0.85} />
      <mesh geometry={nodes.Cylinder.geometry} material={nodes.Cylinder.material} rotation={[Math.PI / 2, 0, 0]} scale={[1.34, 0.09, 1.34]} />
      <OrthographicCamera makeDefault={false} far={100000} near={-100000} position={[-59.52, 8.2, 998.19]} rotation={[-0.01, -0.06, 0]} />
      <directionalLight decay={2} position={[200, 300, 300]} rotation={[-Math.PI / 4, 0.44, -0.4]} />
      <pointLight intensity={1} decay={2} distance={2000} position={[-99.62, -47.81, 116.29]} />
    </group>
  )
}

useGLTF.preload('/untitled.gltf')
